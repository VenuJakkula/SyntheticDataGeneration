 2023_06_09_14_15_30 
  consider the columns in triple backticks ```pktcount,bytecount,dur,flows,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution

 2023_06_09_15_04_30
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution

2023_06_09_15_13_35
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""857, 83986, 878, 7, ICMP, 4.0, 0
88081, 5813586, 270, 4, TCP, 4098.0, 0
878, 86044, 912, 3, ICMP, 0.0, 0
313, 30674, 321, 4, ICMP, 0.0, 0
112853, 120301298, 250, 2, UDP, 0.0, 0
14495, 15103790, 50, 14, ICMP, 2582.0, 1
131044, 135562312, 950, 15, ICMP, 10136.0, 1
123290, 128468180, 440, 2, UDP, 0.0, 1
107621, 5811534, 174, 9, TCP, 4228.0, 1
24211, 1404238, 80, 9, TCP, 0.0, 1"""

2023_06_09_15_16_37
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""857, 83986, 878, 7, ICMP, 4.0, 0
88081, 5813586, 270, 4, TCP, 4098.0, 0
878, 86044, 912, 3, ICMP, 0.0, 0
313, 30674, 321, 4, ICMP, 0.0, 0
112853, 120301298, 250, 2, UDP, 0.0, 0
14495, 15103790, 50, 14, ICMP, 2582.0, 1
131044, 135562312, 950, 15, ICMP, 10136.0, 1
123290, 128468180, 440, 2, UDP, 0.0, 1
107621, 5811534, 174, 9, TCP, 4228.0, 1
24211, 1404238, 80, 9, TCP, 0.0, 1"""

2023_06_09_15_50_40
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_09_15_51_36
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_09_15_52_18
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_09_15_52_40
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_09_16_11_52
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_09_16_29_50
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_09_16_30_32
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_09_17_29_05
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_12_10_44_39
2023_06_09_17_29_05
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_12_10_46_15
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_12_10_55_00
consider the columns in triple backticks ```pktcount,bytecount,dur,flows,Protocol,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution
consider the below sample data
"""67967,917,89866,939,7,ICMP,2.0,0
44631,42432,2291328,135,7,TCP,0.0,0
43673,57767,63395158,130,11,TCP,0.0,0
102459,352,34496,361,5,ICMP,2.0,0
103296,694,68012,711,5,ICMP,2.0,0
4090,44980,46869160,143,4,UDP,0.0,1
36469,190018,10260972,324,5,TCP,110.0,1
54209,35625,37121250,101,5,ICMP,5734.0,1
14985,44971,46859782,143,5,UDP,0.0,1
71300,125746,6790284,430,5,TCP,0.0,1"""

2023_06_13_12_05_33
  consider the columns in triple backticks ```pktcount,bytecount,dur,flows,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution

2023_06_13_12_07_57
  consider the columns in triple backticks ```pktcount,bytecount,dur,flows,tot_kbps,label``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_09_25_13
  consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label``` 
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution

2023_06_14_11_13_27
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label
``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Consider the example data as mentioned following triple quotes
"""7008,3,10.0.0.7,10.0.0.6,11714,773292,44,242000000,44242000000.0,5,46,8311,548598,277,1,TCP,1,3542,1172,0,0.0,0.0,0
31251,4,10.0.0.10,10.0.0.4,325,31850,332,764000000,333000000000.0,7,4942,30,2940,1,1,ICMP,3,406756481,134111139,2,2.0,4.0,0
11515,1,10.0.0.1,10.0.0.8,85676,91330616,190,726000000,191000000000.0,3,1943,13306,14184196,443,0,UDP,3,143928631,3917,0,0.0,0.0,0
31633,3,10.0.0.1,10.0.0.14,59524,3452392,190,824000000,191000000000.0,9,18351,8968,520144,298,1,TCP,1,466233557,34059510,0,0.0,0.0,0
7807,3,10.0.0.3,10.0.0.9,67481,4454290,222,249000000,222000000000.0,11,25224,9912,654264,330,1,TCP,2,6170306,148838366,0,128.0,128.0,0
2949,1,10.0.0.4,10.0.0.3,116271,121154382,417,495000000,417000000000.0,2,4440,8120,8461040,270,0,UDP,4,4575,276819797,0,1626.0,1626.0,1
10266,2,10.0.0.10,10.0.0.7,112539,117265638,383,406000000,383000000000.0,2,1931,6364,6631288,212,0,UDP,2,4538,279386950,0,0.0,0.0,1
41134,5,10.0.0.3,10.0.0.15,8937,518346,29,221000000,29221000000.0,7,8050,8348,484184,278,1,TCP,4,5835270,92935155,425,4271.0,4696.0,1
33603,6,10.0.0.3,10.0.0.5,121267,126360214,378,176000000,378000000000.0,7,3024,9545,9945890,318,1,ICMP,2,262172859,135048191,2640,6.0,2646.0,1
24761,3,10.0.0.15,10.0.0.4,136006,7344324,235,780000000,236000000000.0,5,10817,15814,853956,527,1,TCP,2,5439,1402,0,0.0,0.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_11_14_12
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label
``` and its statistics in triple quotes
""",pktcount,bytecount,dur,flows,tot_kbps
mean,52860,38186596,321,5,2007
std,52023,48777482,283,2,3144
min,0.0,0.0,0.0,2.0,0.0
25%,808.0,79576.0,127.0,3.0,0.0
50%,42828.0,6471930.0,251.0,5.0,4.0
75%,94796.0,76203544.0,412.0,7.0,3838.0
max,260006.0,147128002.0,1881.0,17.0,20580.0"""
Consider the example data as mentioned following triple quotes
"""7008,3,10.0.0.7,10.0.0.6,11714,773292,44,242000000,44242000000.0,5,46,8311,548598,277,1,TCP,1,3542,1172,0,0.0,0.0,0
31251,4,10.0.0.10,10.0.0.4,325,31850,332,764000000,333000000000.0,7,4942,30,2940,1,1,ICMP,3,406756481,134111139,2,2.0,4.0,0
11515,1,10.0.0.1,10.0.0.8,85676,91330616,190,726000000,191000000000.0,3,1943,13306,14184196,443,0,UDP,3,143928631,3917,0,0.0,0.0,0
31633,3,10.0.0.1,10.0.0.14,59524,3452392,190,824000000,191000000000.0,9,18351,8968,520144,298,1,TCP,1,466233557,34059510,0,0.0,0.0,0
7807,3,10.0.0.3,10.0.0.9,67481,4454290,222,249000000,222000000000.0,11,25224,9912,654264,330,1,TCP,2,6170306,148838366,0,128.0,128.0,0
2949,1,10.0.0.4,10.0.0.3,116271,121154382,417,495000000,417000000000.0,2,4440,8120,8461040,270,0,UDP,4,4575,276819797,0,1626.0,1626.0,1
10266,2,10.0.0.10,10.0.0.7,112539,117265638,383,406000000,383000000000.0,2,1931,6364,6631288,212,0,UDP,2,4538,279386950,0,0.0,0.0,1
41134,5,10.0.0.3,10.0.0.15,8937,518346,29,221000000,29221000000.0,7,8050,8348,484184,278,1,TCP,4,5835270,92935155,425,4271.0,4696.0,1
33603,6,10.0.0.3,10.0.0.5,121267,126360214,378,176000000,378000000000.0,7,3024,9545,9945890,318,1,ICMP,2,262172859,135048191,2640,6.0,2646.0,1
24761,3,10.0.0.15,10.0.0.4,136006,7344324,235,780000000,236000000000.0,5,10817,15814,853956,527,1,TCP,2,5439,1402,0,0.0,0.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_12_24_26
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label
``` and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0"""
and consider the example data in triple quotes
""" 
9996,4,10.0.0.3,10.0.0.7,118270,126075820,261,320000000,261000000000.0,6,1931,13532,14425112,451,0,UDP,3,4085,241982745,0,10289.0,10289.0,0
31573,3,10.0.0.8,10.0.0.1,84580,92747280,190,532000000,191000000000.0,11,18351,13504,14745984,450,1,TCP,1,466233354,34059510,0,0.0,0.0,0
24810,4,10.0.0.8,10.0.0.2,361,35378,373,163000000,373000000000.0,5,2997,30,2940,1,1,ICMP,3,78411869,76686331,2404,2404.0,4808.0,0
30441,5,10.0.0.3,10.0.0.10,188,18424,193,50000000,193000000000.0,13,4920,29,2842,0,1,ICMP,1,271210308,269132624,2,2.0,4.0,0
11124,6,10.0.0.11,10.0.0.8,22788,24292008,50,637000000,50637000000.0,2,558,13454,14341964,448,0,UDP,3,2882,2966,0,0.0,0.0,0
9726,6,10.0.0.12,10.0.0.7,19364,20642024,43,320000000,43320000000.0,2,440,13388,14271608,446,0,UDP,3,2924,2882,0,0.0,0.0,0
31813,8,10.0.0.1,10.0.0.14,106313,6166154,368,495000000,368000000000.0,5,18351,6911,400838,230,1,TCP,4,154614531,17693347,197,212.0,409.0,0
28962,4,10.0.0.7,10.0.0.3,58,5684,60,104000000,60104000000.0,7,1049,29,2842,0,1,ICMP,3,14693,2818631,0,748.0,748.0,0
12175,2,10.0.0.4,10.0.0.8,126152,134478032,280,693000000,281000000000.0,2,2242,13299,14176734,443,0,UDP,3,287898035,4663,0,0.0,0.0,0
31543,4,10.0.0.12,10.0.0.1,93323,102505182,210,455000000,210000000000.0,11,18351,13311,14605422,443,1,TCP,1,7472632,6952436,0,0.0,0.0,0
24851,8,10.0.0.15,10.0.0.4,91443,4937922,313,823000000,314000000000.0,5,10817,7992,431568,266,1,TCP,2,10402742,11501433,229,246.0,475.0,1
29022,1,10.0.0.7,10.0.0.2,17394,18124548,66,412000000,66412000000.0,4,1057,7720,8044240,257,1,ICMP,2,18516650,1340,2161,0.0,2161.0,1
15515,6,10.0.0.8,10.0.0.13,123370,7155460,424,901000000,425000000000.0,3,11471,7005,406290,233,1,TCP,1,5958041,160611220,0,100.0,100.0,1
3249,6,10.0.0.3,10.0.0.5,14947,15574774,47,284000000,47284000000.0,4,7894,9516,9915672,317,0,UDP,2,4974,190752024,0,3838.0,3838.0,1
29232,3,10.0.0.7,10.0.0.1,53427,55459478,230,55000000,230000000000.0,6,1057,8924,9271432,297,1,ICMP,2,4555,1242,0,0.0,0.0,1
11545,4,10.0.0.10,10.0.0.8,52582,54790444,170,297000000,170000000000.0,6,1943,9320,9711440,310,0,UDP,1,3845,1242,0,0.0,0.0,1
30012,2,10.0.0.7,10.0.0.1,131162,135573876,1010,132000000,1010000000000.0,5,2053,59,5782,1,1,ICMP,3,271056779,150101,2,2.0,4.0,1
11965,3,10.0.0.5,10.0.0.8,9318,9932988,20,672000000,20672000000.0,3,2242,0,0,0,0,UDP,4,457341754,5354,3838,0.0,3838.0,1
32733,6,10.0.0.10,10.0.0.3,77070,80306940,228,234000000,228000000000.0,5,2364,10054,10476268,335,1,ICMP,2,80546139,79731421,2790,2790.0,5580.0,1
2859,7,10.0.0.10,10.0.0.3,106459,110930278,377,521000000,378000000000.0,2,4440,7901,8232842,263,0,UDP,3,3833,3483,0,0.0,0.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_12_28_50
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label
``` and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0"""
and consider the example data in triple quotes
""" 
9996,4,10.0.0.3,10.0.0.7,118270,126075820,261,320000000,261000000000.0,6,1931,13532,14425112,451,0,UDP,3,4085,241982745,0,10289.0,10289.0,0
31573,3,10.0.0.8,10.0.0.1,84580,92747280,190,532000000,191000000000.0,11,18351,13504,14745984,450,1,TCP,1,466233354,34059510,0,0.0,0.0,0
24810,4,10.0.0.8,10.0.0.2,361,35378,373,163000000,373000000000.0,5,2997,30,2940,1,1,ICMP,3,78411869,76686331,2404,2404.0,4808.0,0
30441,5,10.0.0.3,10.0.0.10,188,18424,193,50000000,193000000000.0,13,4920,29,2842,0,1,ICMP,1,271210308,269132624,2,2.0,4.0,0
11124,6,10.0.0.11,10.0.0.8,22788,24292008,50,637000000,50637000000.0,2,558,13454,14341964,448,0,UDP,3,2882,2966,0,0.0,0.0,0
9726,6,10.0.0.12,10.0.0.7,19364,20642024,43,320000000,43320000000.0,2,440,13388,14271608,446,0,UDP,3,2924,2882,0,0.0,0.0,0
31813,8,10.0.0.1,10.0.0.14,106313,6166154,368,495000000,368000000000.0,5,18351,6911,400838,230,1,TCP,4,154614531,17693347,197,212.0,409.0,0
28962,4,10.0.0.7,10.0.0.3,58,5684,60,104000000,60104000000.0,7,1049,29,2842,0,1,ICMP,3,14693,2818631,0,748.0,748.0,0
12175,2,10.0.0.4,10.0.0.8,126152,134478032,280,693000000,281000000000.0,2,2242,13299,14176734,443,0,UDP,3,287898035,4663,0,0.0,0.0,0
31543,4,10.0.0.12,10.0.0.1,93323,102505182,210,455000000,210000000000.0,11,18351,13311,14605422,443,1,TCP,1,7472632,6952436,0,0.0,0.0,0
24851,8,10.0.0.15,10.0.0.4,91443,4937922,313,823000000,314000000000.0,5,10817,7992,431568,266,1,TCP,2,10402742,11501433,229,246.0,475.0,1
29022,1,10.0.0.7,10.0.0.2,17394,18124548,66,412000000,66412000000.0,4,1057,7720,8044240,257,1,ICMP,2,18516650,1340,2161,0.0,2161.0,1
15515,6,10.0.0.8,10.0.0.13,123370,7155460,424,901000000,425000000000.0,3,11471,7005,406290,233,1,TCP,1,5958041,160611220,0,100.0,100.0,1
3249,6,10.0.0.3,10.0.0.5,14947,15574774,47,284000000,47284000000.0,4,7894,9516,9915672,317,0,UDP,2,4974,190752024,0,3838.0,3838.0,1
29232,3,10.0.0.7,10.0.0.1,53427,55459478,230,55000000,230000000000.0,6,1057,8924,9271432,297,1,ICMP,2,4555,1242,0,0.0,0.0,1
11545,4,10.0.0.10,10.0.0.8,52582,54790444,170,297000000,170000000000.0,6,1943,9320,9711440,310,0,UDP,1,3845,1242,0,0.0,0.0,1
30012,2,10.0.0.7,10.0.0.1,131162,135573876,1010,132000000,1010000000000.0,5,2053,59,5782,1,1,ICMP,3,271056779,150101,2,2.0,4.0,1
11965,3,10.0.0.5,10.0.0.8,9318,9932988,20,672000000,20672000000.0,3,2242,0,0,0,0,UDP,4,457341754,5354,3838,0.0,3838.0,1
32733,6,10.0.0.10,10.0.0.3,77070,80306940,228,234000000,228000000000.0,5,2364,10054,10476268,335,1,ICMP,2,80546139,79731421,2790,2790.0,5580.0,1
2859,7,10.0.0.10,10.0.0.3,106459,110930278,377,521000000,378000000000.0,2,4440,7901,8232842,263,0,UDP,3,3833,3483,0,0.0,0.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_12_31_09
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label
``` and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0"""
and consider the example data in triple quotes
""" 
9996,4,10.0.0.3,10.0.0.7,118270,126075820,261,320000000,261000000000.0,6,1931,13532,14425112,451,0,UDP,3,4085,241982745,0,10289.0,10289.0,0
31573,3,10.0.0.8,10.0.0.1,84580,92747280,190,532000000,191000000000.0,11,18351,13504,14745984,450,1,TCP,1,466233354,34059510,0,0.0,0.0,0
24810,4,10.0.0.8,10.0.0.2,361,35378,373,163000000,373000000000.0,5,2997,30,2940,1,1,ICMP,3,78411869,76686331,2404,2404.0,4808.0,0
30441,5,10.0.0.3,10.0.0.10,188,18424,193,50000000,193000000000.0,13,4920,29,2842,0,1,ICMP,1,271210308,269132624,2,2.0,4.0,0
11124,6,10.0.0.11,10.0.0.8,22788,24292008,50,637000000,50637000000.0,2,558,13454,14341964,448,0,UDP,3,2882,2966,0,0.0,0.0,0
9726,6,10.0.0.12,10.0.0.7,19364,20642024,43,320000000,43320000000.0,2,440,13388,14271608,446,0,UDP,3,2924,2882,0,0.0,0.0,0
31813,8,10.0.0.1,10.0.0.14,106313,6166154,368,495000000,368000000000.0,5,18351,6911,400838,230,1,TCP,4,154614531,17693347,197,212.0,409.0,0
28962,4,10.0.0.7,10.0.0.3,58,5684,60,104000000,60104000000.0,7,1049,29,2842,0,1,ICMP,3,14693,2818631,0,748.0,748.0,0
12175,2,10.0.0.4,10.0.0.8,126152,134478032,280,693000000,281000000000.0,2,2242,13299,14176734,443,0,UDP,3,287898035,4663,0,0.0,0.0,0
31543,4,10.0.0.12,10.0.0.1,93323,102505182,210,455000000,210000000000.0,11,18351,13311,14605422,443,1,TCP,1,7472632,6952436,0,0.0,0.0,0
24851,8,10.0.0.15,10.0.0.4,91443,4937922,313,823000000,314000000000.0,5,10817,7992,431568,266,1,TCP,2,10402742,11501433,229,246.0,475.0,1
29022,1,10.0.0.7,10.0.0.2,17394,18124548,66,412000000,66412000000.0,4,1057,7720,8044240,257,1,ICMP,2,18516650,1340,2161,0.0,2161.0,1
15515,6,10.0.0.8,10.0.0.13,123370,7155460,424,901000000,425000000000.0,3,11471,7005,406290,233,1,TCP,1,5958041,160611220,0,100.0,100.0,1
3249,6,10.0.0.3,10.0.0.5,14947,15574774,47,284000000,47284000000.0,4,7894,9516,9915672,317,0,UDP,2,4974,190752024,0,3838.0,3838.0,1
29232,3,10.0.0.7,10.0.0.1,53427,55459478,230,55000000,230000000000.0,6,1057,8924,9271432,297,1,ICMP,2,4555,1242,0,0.0,0.0,1
11545,4,10.0.0.10,10.0.0.8,52582,54790444,170,297000000,170000000000.0,6,1943,9320,9711440,310,0,UDP,1,3845,1242,0,0.0,0.0,1
30012,2,10.0.0.7,10.0.0.1,131162,135573876,1010,132000000,1010000000000.0,5,2053,59,5782,1,1,ICMP,3,271056779,150101,2,2.0,4.0,1
11965,3,10.0.0.5,10.0.0.8,9318,9932988,20,672000000,20672000000.0,3,2242,0,0,0,0,UDP,4,457341754,5354,3838,0.0,3838.0,1
32733,6,10.0.0.10,10.0.0.3,77070,80306940,228,234000000,228000000000.0,5,2364,10054,10476268,335,1,ICMP,2,80546139,79731421,2790,2790.0,5580.0,1
2859,7,10.0.0.10,10.0.0.3,106459,110930278,377,521000000,378000000000.0,2,4440,7901,8232842,263,0,UDP,3,3833,3483,0,0.0,0.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_12_38_19
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label
``` and its statistics in triple quotes """index,dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0 """ and consider the following exaples in triple quotes 
"""30222,6,624,61152,640,14000000,640000000000.0,4,2053,29,2842,0,1,ICMP,3,169211,271088959,0,0.0,0.0,0
31753,6,77351,4486358,259,527000000,260000000000.0,5,18351,7832,454256,261,1,TCP,4,29044159,452292829,241,225.0,466.0,0
6582,5,567,55566,581,591000000,582000000000.0,7,3421,29,2842,0,0,ICMP,4,135497407,406606499,1,1.0,2.0,0
31453,4,23163,1528922,70,476000000,70476000000.0,9,10692,9769,644918,325,1,TCP,2,6046,1382,0,0.0,0.0,0
4277,2,121122,132880068,271,154000000,271000000000.0,4,1143,13495,14746838,449,1,TCP,3,135922661,5871637,4072,176.0,4248.0,0
27918,4,124462,129689404,443,555000000,444000000000.0,13,2790,8738,9104996,291,1,ICMP,2,271242485,241575241,2,2419.0,2421.0,1
24690,4,40784,42496928,148,84000000,148000000000.0,5,2997,7959,8293278,265,1,ICMP,1,5247,1402,0,0.0,0.0,1
11965,3,9318,9932988,20,672000000,20672000000.0,3,2242,0,0,0,0,UDP,2,3949,1562,0,0.0,0.0,1
42125,5,60143,3247722,111,226000000,111000000000.0,7,13231,16756,904824,558,1,TCP,3,402858990,32938730,8078,456.0,8534.0,1
4427,3,97582,5659756,319,998000000,320000000000.0,5,1143,8837,512546,294,1,TCP,3,6491719,152399011,0,126.0,126.0,1 """ Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.


2023_06_14_14_00_00
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label
``` and its statistics in triple quotes """ ,dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0""" and consider the following examples in triple quotes
"""33903,3,710,69580,728,361000000,728000000000.0,11,3034,29,2842,0,1,ICMP,1,271172593,135809046,3,3.0,6.0,0
28872,6,19,1862,20,121000000,20121000000.0,3,10,0,0,0,1,ICMP,2,5229,5229,0,0.0,0.0,0
25110,4,657,64386,673,245000000,673000000000.0,5,3009,30,2940,1,1,ICMP,2,133812120,135537546,1,1.0,2.0,0
33423,3,291,28518,298,348000000,298000000000.0,13,3024,30,2940,1,1,ICMP,3,201728647,184960713,2745,2745.0,5490.0,0
2769,2,16115,17178590,35,83000000,35083000000.0,6,4440,13443,14330238,448,0,UDP,4,4295,215600421,0,6055.0,6055.0,0
24821,8,83451,4506354,283,815000000,284000000000.0,5,10817,8246,445284,274,1,TCP,3,10576571,9541475,258,240.0,498.0,1
3369,8,52165,54355930,167,464000000,167000000000.0,3,7916,9225,9612450,307,0,UDP,3,4430,198359762,0,4126.0,4126.0,1
15725,4,17055,989190,61,723000000,61723000000.0,5,16540,8509,493522,283,1,TCP,1,6450365,161123248,0,0.0,0.0,1
3249,8,14973,15601866,47,453000000,47453000000.0,3,7894,9516,9915672,317,0,UDP,1,4336,1312,0,0.0,0.0,1
2949,2,116269,121152298,417,479000000,417000000000.0,3,4440,8120,8461040,270,0,UDP,3,276816257,4533,1626,0.0,1626.0,1 """  Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_14_11_36
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label``` and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0 """ and consider the following examples in triple quotes
"""3909,4,39111,41692326,86,683000000,86683000000.0,3,8803,13499,14389934,449,0,UDP,1,4695,41998752,0,3839.0,3839.0,0
31101,3,178,17444,182,911000000,183000000000.0,9,4942,29,2842,0,1,ICMP,2,29061,24648,0,0.0,0.0,0
11245,4,54279,57861414,120,777000000,121000000000.0,5,1298,13586,14482676,452,0,UDP,1,3584,1172,0,0.0,0.0,0
29472,7,605,59290,620,219000000,620000000000.0,3,1057,29,2842,0,1,ICMP,2,4848,1312,0,0.0,0.0,0
4187,5,58408,64106488,131,86000000,131000000000.0,7,1143,13153,14473386,438,1,TCP,4,178622938,8109552,8092,485.0,8577.0,0
10749,2,42889,2487562,139,482000000,139000000000.0,11,4357,9164,531512,305,1,TCP,2,10414191,239750769,348,7846.0,8194.0,1
11665,4,119352,124364784,390,882000000,391000000000.0,3,1943,7952,8285984,265,0,UDP,2,4022,1472,0,0.0,0.0,1
11019,5,122683,7115614,405,873000000,406000000000.0,4,4357,8756,507848,291,1,TCP,1,4610,5957140,0,127.0,127.0,1
11545,4,134682,143571012,318,839000000,319000000000.0,6,1943,4288,4571008,142,0,UDP,3,3413,3665,0,0.0,0.0,1
24941,4,233381,12602574,415,981000000,416000000000.0,5,10817,16262,878148,542,1,TCP,1,5526,1472,0,0.0,0.0,1 """  Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_15_19_09
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label ```
and its statistics in triple quotes
""" index,dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0"""
and consider the following examples in triple quotes
"""14465,3,66819,74175878,151,337000000,151000000000.0,3,832,13600,14953872,453,1,TCP,2,3556,1332,0,0.0,0.0,0
30381,2,833,81634,853,302000000,853000000000.0,6,4920,29,2842,0,1,ICMP,3,89796,135549222,0,0.0,0.0,0
15845,3,83899,92640998,189,34000000,189000000000.0,5,16540,13379,14779718,445,1,TCP,3,23330166,302124001,131,122.0,253.0,0
7837,2,77102,5089372,252,259000000,252000000000.0,9,25224,9621,635082,320,1,TCP,4,174879238,425998662,598,8001.0,8599.0,0
41013,2,5894,6459276,13,174000000,13174000000.0,7,35,0,0,0,1,TCP,1,92955329,3838222,9573,420.0,9993.0,0
11409,4,41519,2408102,133,435000000,133000000000.0,7,6696,9273,537834,309,1,TCP,4,20197832,284298566,320,4059.0,4379.0,1
25601,5,123067,6645618,404,74000000,404000000000.0,3,16567,8898,480492,296,1,TCP,3,172694771,174127871,0,128.0,128.0,1
30741,5,121642,126750964,442,901000000,443000000000.0,7,4920,7915,8247430,263,1,ICMP,1,271227941,269150054,0,0.0,0.0,1
2919,2,108149,112691258,387,472000000,387000000000.0,3,4440,8340,8690280,278,0,UDP,2,3483,3903,0,0.0,0.0,1
4607,5,129708,7523064,447,23000000,447000000000.0,3,1143,7116,412728,237,1,TCP,5,6532738,147122626,0,0.0,0.0,1 """
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_14_16_15_23
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label ```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0,103839.0
mean,17999.45416462023,4.214495517098586,52781.70316547732,38017286.38255376,322.1261183177804,461373404.98271364,322515117113.9938,5.666339236702973,5196.261308371614,6365.870588121997,4689472.453317154,211.68224848082127,0.6039156771540558,2.337580292568303,93707039.45552249,93734918.67759705,1003.7673224896233,1003.8114196014985,2007.5787420911217
std,11962.227566417303,1.9563199994701495,52061.40917829189,48745443.35414268,283.92614128051906,277101961.2069676,283810425735.11694,2.951012584573704,5266.6319496326505,7413.263908764818,7562022.61555556,247.13826515834816,0.4890846916891285,1.0829733780243598,152167893.3623398,133164237.97739877,2428.363391317854,2054.8870339768646,3144.4371725399496
min,2488.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,4.0,-130933.0,-146442594.0,-4365.0,0.0,1.0,2527.0,856.0,0.0,0.0,0.0
25%,7128.0,3.0,801.0,79282.0,128.0,233000000.0,128000000000.0,3.0,1943.0,29.0,2842.0,0.0,0.0,1.0,4799.0,3539.0,0.0,0.0,0.0
50%,11965.0,4.0,42557.0,6409692.0,252.0,418000000.0,252000000000.0,5.0,3024.0,8304.0,544736.0,276.0,1.0,2.0,4552643.0,14011344.0,0.0,0.0,4.0
75%,29982.0,5.0,94683.0,75972220.0,413.0,704000000.0,413000000000.0,7.0,7385.0,10004.0,9727070.0,333.0,1.0,3.0,135650931.0,143928631.0,255.0,557.0,3838.0
max,42935.0,10.0,260006.0,147128002.0,1881.0,999000000.0,1880000000000.0,17.0,25224.0,19190.0,14953872.0,639.0,1.0,5.0,1269981973.0,990596183.0,20580.0,16577.0,20580.0 """
and consider the following examples in triple quotes
""" 31483,7,62453,4122114,200,426000000,200000000000.0,7,10957,10034,662244,334,1,TCP,2,3269070,80318022,178,3930.0,4108.0,0
41254,2,59297,3439226,201,612000000,202000000000.0,9,8050,9116,528728,303,1,TCP,1,429434561,24001090,7927,611.0,8538.0,0
5297,5,260002,14040108,469,135000000,469000000000.0,5,2373,10646,574884,354,1,TCP,4,322219485,181435711,81,142.0,223.0,0
26807,7,167,16366,171,185000000,171000000000.0,4,948,30,2940,1,1,ICMP,1,4352,1332,0,0.0,0.0,0
33303,3,222,21756,228,340000000,228000000000.0,13,3024,29,2842,0,1,ICMP,3,161339396,144415232,2718,2578.0,5296.0,0
26867,1,9517,9842138,81,124000000,81124000000.0,4,948,9230,9589340,307,1,ICMP,2,38013512,1410,2554,0.0,2554.0,1
2829,5,98542,102680764,347,334000000,347000000000.0,2,4440,9168,9553056,305,0,UDP,1,3943,1492,0,0.0,0.0,1
3489,7,87263,90928046,287,522000000,288000000000.0,2,7916,8223,8568366,274,0,UDP,1,5375,278546882,0,0.0,0.0,1
9786,6,972,1012824,3,452000000,3452000000.0,3,1109,0,0,0,0,UDP,2,3273,1352,0,0.0,0.0,1
11455,4,56607,58984494,180,857000000,181000000000.0,6,1943,9292,9682264,309,0,UDP,2,3845,1402,0,0.0,0.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_16_07_57_48
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839,103839
mean,17999,4,52781,38017286,322,461373404,322515117113,5,5196,6365,4689472,211,0,2,93707039,93734918,1003,1003,2007
std,11962,1,52061,48745443,283,277101961,283810425735,2,5266,7413,7562022,247,0,1,152167893,133164237,2428,2054,3144
min,2488,1,0,0,0,0,0,2,4,-130933,-146442594,-4365,0,1,2527,856,0,0,0
25%,7128,3,801,79282,128,233000000,128000000000,3,1943,29,2842,0,0,1,4799,3539,0,0,0
50%,11965,4,42557,6409692,252,418000000,252000000000,5,3024,8304,544736,276,1,2,4552643,14011344,0,0,4
75%,29982,5,94683,75972220,413,704000000,413000000000,7,7385,10004,9727070,333,1,3,135650931,143928631,255,557,3838
max,42935,10,260006,147128002,1881,999000000,1880000000000,17,25224,19190,14953872,639,1,5,1269981973,990596183,20580,16577,20580"""
and consider the following examples in triple quotes
""" 32703,1,339,33222,348,537000000,349000000000.0,6,2364,28,2744,0,1,ICMP,2,28999,25644,0,0.0,0.0,0
34173,4,320,31360,328,149000000,328000000000.0,7,3034,30,2940,1,1,ICMP,2,271297251,135265739,1,1.0,2.0,0
6978,4,48704,55899368,114,293000000,114000000000.0,7,46,12659,14646566,421,1,TCP,2,3315,1262,0,0.0,0.0,0
28368,3,127,12446,130,896000000,131000000000.0,11,2800,29,2842,0,1,ICMP,4,271397253,271395631,3,3.0,6.0,0
28038,2,508,49784,521,125000000,521000000000.0,5,2790,29,2842,0,1,ICMP,4,135758389,271216809,1,1.0,2.0,0
10779,7,105257,5683878,173,911000000,174000000000.0,5,4357,18016,972864,600,1,TCP,3,3034125,5709377,141,263.0,404.0,1
27558,6,22038,22963596,87,879000000,87879000000.0,6,2448,7551,7868142,251,1,ICMP,3,114352,158827288,1,2082.0,2083.0,1
2919,2,122650,127801300,435,919000000,436000000000.0,3,4440,8314,8663188,277,0,UDP,4,4491,270718431,0,2346.0,2346.0,1
31183,7,119069,6429726,420,252000000,420000000000.0,2,3982,7942,428868,264,1,TCP,1,6448962,145705624,0,0.0,0.0,1
11605,3,71239,74231038,230,498000000,230000000000.0,4,1943,9243,9631206,308,0,UDP,3,3842,3590,0,0.0,0.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_16_09_10_22
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255
mean,18070,4,52618,37594158,328,462201108,328533214820,5,5110,6210,4559171,206,0,2,86997796,91315415,696,860,1557
std,11985,1,52602,48778246,287,277779522,287142202938,2,5178,7472,7589420,249,0,1,147396145,130737762,1639,1715,2359
min,2488,1,0,0,0,0,0,2,4,-130933,-146442594,-4365,0,1,2527,856,0,0,0
25%,7128,3,776,76636,130,233000000,130000000000,3,1943,29,2842,0,0,1,4659,3488,0,0,0
50%,11995,4,41394,6261858,259,419000000,259000000000,5,3021,8167,525074,272,1,2,2503925,11932179,0,0,2
75%,30042,5,95062,74559789,421,705000000,422000000000,7,7385,9891,9691642,329,1,3,135518338,142171720,173,333,2654
max,42935,10,260006,147128002,1881,999000000,1880000000000,17,25224,19190,14953872,639,1,5,1269981973,990596183,9473,9473,9572"""
and consider the following examples in triple quotes
""" 4787,6,47366,53268188,109,33000000,109000000000.0,5,1181,13269,14713066,442,1,TCP,3,7765084,176078946,167,3922.0,4089.0,0
30411,7,908,88984,933,280000000,933000000000.0,13,4920,29,2842,0,1,ICMP,1,183818836,47985976,4646,4646.0,9292.0,0
14615,8,81401,5372694,251,279000000,251000000000.0,9,7385,9802,646932,326,1,TCP,3,3856,3413,0,0.0,0.0,0
3909,4,39111,41692326,86,683000000,86683000000.0,3,8803,13499,14389934,449,0,UDP,2,810693685,3692,7676,0.0,7676.0,0
7717,10,6810,394980,19,889000000,19889000000.0,5,25224,0,0,0,1,TCP,2,428829,220346,112,58.0,170.0,0
4187,5,18266,986364,30,967000000,30967000000.0,7,1143,17984,971136,599,1,TCP,5,2840632,64318612,171,3915.0,4086.0,1
2769,2,79799,83150558,285,907000000,286000000000.0,6,4440,8683,9047686,289,0,UDP,4,4253,215596881,0,6110.0,6110.0,1
2829,2,98268,102395256,345,913000000,346000000000.0,4,4440,9168,9553056,305,0,UDP,3,4337,245258119,0,2529.0,2529.0,1
29862,5,24374,25397708,79,566000000,79566000000.0,8,2053,9288,9678096,309,1,ICMP,2,191027546,80700684,2571,5146.0,7717.0,1
11365,3,28562,29761604,90,867000000,90867000000.0,5,1790,9446,9842732,314,0,UDP,3,139618793,3875,3838,0.0,3838.0,1"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_16_10_01_49
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255
mean,18070,4,52618,37594158,328,462201108,328533214820,5,5110,6210,4559171,206,0,2,86997796,91315415,696,860,1557
std,11985,1,52602,48778246,287,277779522,287142202938,2,5178,7472,7589420,249,0,1,147396145,130737762,1639,1715,2359
min,2488,1,0,0,0,0,0,2,4,-130933,-146442594,-4365,0,1,2527,856,0,0,0
25%,7128,3,776,76636,130,233000000,130000000000,3,1943,29,2842,0,0,1,4659,3488,0,0,0
50%,11995,4,41394,6261858,259,419000000,259000000000,5,3021,8167,525074,272,1,2,2503925,11932179,0,0,2
75%,30042,5,95062,74559789,421,705000000,422000000000,7,7385,9891,9691642,329,1,3,135518338,142171720,173,333,2654
max,42935,10,260006,147128002,1881,999000000,1880000000000,17,25224,19190,14953872,639,1,5,1269981973,990596183,9473,9473,9572
"""
and consider the following examples in triple quotes
"""2608,2,75019,79970254,166,401000000,166000000000.0,5,2375,13442,14329172,448,0,UDP,3,3404,3236,0,0.0,0.0,0
7302,5,664,65072,681,394000000,681000000000.0,5,3443,28,2744,0,0,ICMP,4,135579426,406688504,0,0.0,0.0,0
31573,5,90081,5945646,290,443000000,290000000000.0,11,18351,9985,659010,332,1,TCP,1,4168910,92966206,175,3924.0,4099.0,0
4787,6,18554,1224760,58,941000000,58941000000.0,5,1181,9509,627642,316,1,TCP,1,2138234,53434392,166,3921.0,4087.0,0
5772,4,578,56644,591,924000000,592000000000.0,9,1264,30,2940,1,0,ICMP,1,4932,1562,0,0.0,0.0,0
3459,4,78944,82259648,256,842000000,257000000000.0,2,7916,8825,9195650,294,0,UDP,2,580784160,2530,7760,0.0,7760.0,1
6072,5,5739,5980038,19,496000000,19496000000.0,11,2822,0,0,0,1,ICMP,2,5029,1472,0,0.0,0.0,1
25721,8,129118,6972372,464,863000000,465000000000.0,3,16567,263,14202,8,1,TCP,2,27729707,30111856,2,2.0,4.0,1
9816,5,10426,10863892,33,428000000,33428000000.0,3,1109,9457,9854194,315,0,UDP,2,3236,3320,0,0.0,0.0,1
30072,2,131234,135580932,1070,138000000,1070000000000.0,5,2053,30,2940,1,1,ICMP,1,105719,135561902,0,0.0,0.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_16_10_04_48
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255
mean,18070,4,52618,37594158,328,462201108,328533214820,5,5110,6210,4559171,206,0,2,86997796,91315415,696,860,1557
std,11985,1,52602,48778246,287,277779522,287142202938,2,5178,7472,7589420,249,0,1,147396145,130737762,1639,1715,2359
min,2488,1,0,0,0,0,0,2,4,-130933,-146442594,-4365,0,1,2527,856,0,0,0
25%,7128,3,776,76636,130,233000000,130000000000,3,1943,29,2842,0,0,1,4659,3488,0,0,0
50%,11995,4,41394,6261858,259,419000000,259000000000,5,3021,8167,525074,272,1,2,2503925,11932179,0,0,2
75%,30042,5,95062,74559789,421,705000000,422000000000,7,7385,9891,9691642,329,1,3,135518338,142171720,173,333,2654
max,42935,10,260006,147128002,1881,999000000,1880000000000,17,25224,19190,14953872,639,1,5,1269981973,990596183,9473,9473,9572
"""
and consider the following examples in triple quotes
"""42035,4,53509,59385746,121,293000000,121000000000.0,7,12549,13111,14758006,437,1,TCP,1,5436,1312,0,0.0,0.0,0
30921,6,755,73990,773,221000000,773000000000.0,9,4942,29,2842,0,1,ICMP,3,406285435,135713477,2,2.0,4.0,0
11124,3,284,302744,0,837000000,837000000.0,2,558,0,0,0,0,UDP,1,3096,1032,0,0.0,0.0,0
41163,3,94683,104548982,213,320000000,213000000000.0,7,8050,13332,14772520,444,1,TCP,3,109047887,7477342,4297,438.0,4735.0,0
7512,9,870,85260,891,508000000,892000000000.0,5,3443,29,2842,0,0,ICMP,4,88522,88075,0,0.0,0.0,0
31063,4,99959,5397786,340,306000000,340000000000.0,5,3982,7806,421524,260,1,TCP,1,4938643,4594804,121,113.0,234.0,1
4517,5,212034,11449836,360,992000000,361000000000.0,3,1143,17944,968976,598,1,TCP,3,4797,1492,0,0.0,0.0,1
4517,5,105722,6131876,357,4000000,357000000000.0,3,1143,8972,520376,299,1,TCP,5,6532738,147122626,0,0.0,0.0,1
41313,7,61131,3301074,203,267000000,203000000000.0,5,8050,8852,478008,295,1,TCP,3,7496123,8123515,255,274.0,529.0,1
11785,3,115877,120743834,410,556000000,411000000000.0,2,1943,5880,6126960,196,0,UDP,1,3952,1312,0,0.0,0.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_16_10_07_54
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255,99255
mean,18070,4,52618,37594158,328,462201108,328533214820,5,5110,6210,4559171,206,0,2,86997796,91315415,696,860,1557
std,11985,1,52602,48778246,287,277779522,287142202938,2,5178,7472,7589420,249,0,1,147396145,130737762,1639,1715,2359
min,2488,1,0,0,0,0,0,2,4,-130933,-146442594,-4365,0,1,2527,856,0,0,0
25%,7128,3,776,76636,130,233000000,130000000000,3,1943,29,2842,0,0,1,4659,3488,0,0,0
50%,11995,4,41394,6261858,259,419000000,259000000000,5,3021,8167,525074,272,1,2,2503925,11932179,0,0,2
75%,30042,5,95062,74559789,421,705000000,422000000000,7,7385,9891,9691642,329,1,3,135518338,142171720,173,333,2654
max,42935,10,260006,147128002,1881,999000000,1880000000000,17,25224,19190,14953872,639,1,5,1269981973,990596183,9473,9473,9572
"""
and consider the following examples in triple quotes
"""25230,6,872,85456,893,384000000,893000000000.0,10,3860,29,2842,0,1,ICMP,3,141610866,135572448,1705,2.0,1707.0,0
29922,3,996,97608,1020,207000000,1020000000000.0,10,2053,30,2940,1,1,ICMP,2,33829,44786968,0,2564.0,2564.0,0
11605,1,126395,134737070,280,734000000,281000000000.0,2,1943,13531,14424046,451,0,UDP,2,3865,1562,0,0.0,0.0,0
30921,4,755,73990,773,230000000,773000000000.0,9,4942,29,2842,0,1,ICMP,3,406634401,133989059,2,2.0,4.0,0
31161,7,893,87514,913,137000000,913000000000.0,11,4942,29,2842,0,1,ICMP,2,101105,96442,0,0.0,0.0,0
27167,4,127624,132984208,431,17000000,431000000000.0,9,948,8942,9317564,298,1,ICMP,2,238145578,105069702,4960,2476.0,7436.0,1
3369,7,52158,54348636,167,408000000,167000000000.0,3,7916,9225,9612450,307,0,UDP,1,4610,198357484,0,4126.0,4126.0,1
2949,7,128967,134383614,467,531000000,468000000000.0,2,4440,6027,6280134,200,0,UDP,3,3903,3483,0,0.0,0.0,1
6162,5,18278,19045676,60,13000000,60013000000.0,13,3421,9117,9499914,303,1,ICMP,5,169113490,30898,2529,0.0,2529.0,1
25511,10,79231,4278474,252,58000000,252000000000.0,5,16567,8706,470124,290,1,TCP,1,5592869,5203244,136,127.0,263.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.2023_06_18_22_35_13
consider the columns in triple backticks ```dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936,87936
mean,17756,3,51530,41367874,322,467921078,322719606179,5,3954,6541,5325006,217,0,2,90294747,90311305,979,979,1959
std,12107,1,51277,49687370,288,278284495,288770236972,2,3178,5714,6025017,190,0,1,149214982,129776574,2410,2005,3061
min,2488,1,0,0,0,0,0,2,4,0,0,0,0,1,2668,856,0,0,0
25%,6918,3,769,75754,121,238000000,121000000000,3,1931,29,2842,0,0,1,4425,3413,0,0,0
50%,11635,4,39341,9551360,250,423000000,251000000000,5,2790,8324,651552,277,1,2,231511,9897209,0,0,2
75%,29922,5,92938,82781700,417,721000000,417000000000,7,4920,12659,9838564,421,1,3,135577081,135892103,175,503,3838
max,42935,7,260006,147128002,1881,999000000,1880000000000,12,13797,19190,14953872,639,1,5,1269981973,990596183,20580,16577,20580
"""
and consider the following examples in triple quotes
"""7627,4,28029,1850190,92,138000000,92138000000.0,7,12138,9511,627726,317,1,TCP,2,1869692,45267908,169,3921.0,4090.0,0
6822,5,802,78596,821,637000000,822000000000.0,11,3443,30,2940,1,0,ICMP,2,5428,1542,0,0.0,0.0,0
10116,4,127073,135459818,280,610000000,281000000000.0,4,1931,13528,14420848,450,0,UDP,1,3719,1156,0,0.0,0.0,0
9846,6,73565,78420290,163,330000000,163000000000.0,3,1910,13615,14513590,453,0,UDP,3,98996058,3488,6384,0.0,6384.0,0
14345,7,9067,598542,31,252000000,31252000000.0,5,22,8710,574980,290,1,TCP,1,3273,1262,0,0.0,0.0,0
10749,7,87241,4711014,143,910000000,144000000000.0,5,4357,18328,989712,610,1,TCP,3,2503241,4720943,141,263.0,404.0,1
3069,5,7581,8081346,13,324000000,13324000000.0,2,5882,0,0,0,0,UDP,3,422454306,5396,0,0.0,0.0,1
41373,2,79245,4596210,272,768000000,273000000000.0,5,8050,8430,488940,281,1,TCP,3,12585509,298349585,0,120.0,120.0,1
11515,4,75074,78227108,240,863000000,241000000000.0,6,1943,9180,9565560,306,0,UDP,4,3665,3413,0,0.0,0.0,1
11049,3,237137,12805398,392,790000000,393000000000.0,5,4357,17409,940086,580,1,TCP,2,4036,1312,0,0.0,0.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_06_19_18_56_05
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736
mean,17210,3,49365,43129572,332,472963002,333025145387,5,3251,6234,5495646,207,0,2,89575803,89594012,940,940,1881
std,11904,1,50627,50240352,296,276419823,296839692518,2,2211,5727,6029590,190,0,1,148920594,130037168,2339,1951,2983
min,2488,1,0,0,0,0,0,2,4,0,0,0,0,1,2668,856,0,0,0
25%,6492,3,704,69776,123,246000000,123000000000,3,1931,29,2842,0,0,1,4266,3339,0,0,0
50%,11515,4,34597,14782222,257,428000000,257000000000,5,2385,8012,663228,267,1,2,105767,6030042,0,0,2
75%,29832,5,91478,85599258,435,728000000,436000000000,7,4357,10255,9853152,341,1,3,135559596,135758389,148,386,3421
max,42005,7,260006,147128002,1881,999000000,1880000000000,12,8803,18898,14953872,629,1,5,1269981973,990596183,20580,16577,20580
"""
and consider the following examples in triple quotes
"""29292,3,10.0.0.3,10.0.0.7,380,37240,390,150000000,390000000000.0,6,1057,29,2842,0,1,ICMP,3,174564427,74272927,4940,2473.0,7413.0,0
29292,5,10.0.0.7,10.0.0.12,429,42042,440,172000000,440000000000.0,4,1057,29,2842,0,1,ICMP,3,47803,100352681,0,2467.0,2467.0,0
30282,1,10.0.0.7,10.0.0.2,536,52528,549,915000000,550000000000.0,5,2053,29,2842,0,1,ICMP,2,135506785,56374,0,0.0,0.0,0
6432,6,10.0.0.12,10.0.0.9,519,50862,531,721000000,532000000000.0,4,3421,29,2842,0,0,ICMP,2,58009,253703069,0,2517.0,2517.0,0
6372,5,10.0.0.12,10.0.0.9,460,45080,471,705000000,472000000000.0,11,3421,29,2842,0,0,ICMP,5,234885949,52115,2449,0.0,2449.0,0
30102,2,10.0.0.1,10.0.0.7,131263,135583774,1100,169000000,1100000000000.0,5,2053,29,2842,0,1,ICMP,4,135729563,271176269,1,1.0,2.0,1
3129,4,10.0.0.9,10.0.0.5,11878,12661948,24,504000000,24504000000.0,3,6846,0,0,0,0,UDP,3,422454306,5438,0,0.0,0.0,1
27077,2,10.0.0.7,10.0.0.1,74045,76886794,291,150000000,291000000000.0,6,948,9160,9516400,305,1,ICMP,3,181994969,33551,5064,0.0,5064.0,1
28128,1,10.0.0.7,10.0.0.1,131498,135606804,1341,368000000,1340000000000.0,5,2790,29,2842,0,1,ICMP,1,135615651,151446,0,0.0,0.0,1
10356,4,10.0.0.10,10.0.0.7,129990,135449580,473,376000000,473000000000.0,2,1931,3792,3951264,126,0,UDP,2,3826,1312,0,0.0,0.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.2023_07_25_15_08_33
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736
mean,17210,3,49365,43129572,332,472963002,333025145387,5,3251,6234,5495646,207,0,2,89575803,89594012,940,940,1881
std,11904,1,50627,50240352,296,276419823,296839692518,2,2211,5727,6029590,190,0,1,148920594,130037168,2339,1951,2983
min,2488,1,0,0,0,0,0,2,4,0,0,0,0,1,2668,856,0,0,0
25%,6492,3,704,69776,123,246000000,123000000000,3,1931,29,2842,0,0,1,4266,3339,0,0,0
50%,11515,4,34597,14782222,257,428000000,257000000000,5,2385,8012,663228,267,1,2,105767,6030042,0,0,2
75%,29832,5,91478,85599258,435,728000000,436000000000,7,4357,10255,9853152,341,1,3,135559596,135758389,148,386,3421
max,42005,7,260006,147128002,1881,999000000,1880000000000,12,8803,18898,14953872,629,1,5,1269981973,990596183,20580,16577,20580
"""
and consider the following examples in triple quotes
"""5952,6,10.0.0.9,10.0.0.12,50,4900,51,603000000,51603000000.0,3,1278,30,2940,1,0,ICMP,3,4683,4550,0,0.0,0.0,0
12115,4,10.0.0.5,10.0.0.8,76803,81871998,170,629000000,171000000000.0,3,2242,13478,14367548,449,0,UDP,1,4233,1312,0,0.0,0.0,0
30951,3,10.0.0.4,10.0.0.10,31,3038,32,894000000,32894000000.0,9,4942,29,2842,0,1,ICMP,3,133913907,271099165,1,1.0,2.0,0
29682,7,10.0.0.11,10.0.0.7,97,9506,99,979000000,99979000000.0,5,1069,29,2842,0,1,ICMP,4,86408,135545925,0,0.0,0.0,0
32493,3,10.0.0.11,10.0.0.3,86,8428,88,471000000,88471000000.0,3,20,30,2940,1,1,ICMP,1,4310,1172,0,0.0,0.0,0
29232,5,10.0.0.2,10.0.0.7,78253,81539626,279,866000000,280000000000.0,4,1057,8944,9319648,298,1,ICMP,1,4575,1242,0,0.0,0.0,1
11605,4,10.0.0.20,10.0.0.8,129976,135434992,430,766000000,431000000000.0,5,1943,4645,4840090,154,0,UDP,1,3952,1242,0,0.0,0.0,1
10296,3,10.0.0.10,10.0.0.7,118773,123761466,413,384000000,413000000000.0,2,1931,6237,6498954,207,0,UDP,3,4766,411698286,0,1734.0,1734.0,1
10146,3,10.0.0.10,10.0.0.7,82155,85605510,263,369000000,263000000000.0,3,1931,9245,9633290,308,0,UDP,1,3649,1402,0,0.0,0.0,1
11049,2,10.0.0.3,10.0.0.4,118305,6861690,391,367000000,391000000000.0,5,4357,8705,504890,290,1,TCP,1,468045754,33713780,415,223.0,638.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_09_04_12_54_16
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736
mean,17210,3,49365,43129572,332,472963002,333025145387,5,3251,6234,5495646,207,0,2,89575803,89594012,940,940,1881
std,11904,1,50627,50240352,296,276419823,296839692518,2,2211,5727,6029590,190,0,1,148920594,130037168,2339,1951,2983
min,2488,1,0,0,0,0,0,2,4,0,0,0,0,1,2668,856,0,0,0
25%,6492,3,704,69776,123,246000000,123000000000,3,1931,29,2842,0,0,1,4266,3339,0,0,0
50%,11515,4,34597,14782222,257,428000000,257000000000,5,2385,8012,663228,267,1,2,105767,6030042,0,0,2
75%,29832,5,91478,85599258,435,728000000,436000000000,7,4357,10255,9853152,341,1,3,135559596,135758389,148,386,3421
max,42005,7,260006,147128002,1881,999000000,1880000000000,12,8803,18898,14953872,629,1,5,1269981973,990596183,20580,16577,20580
"""
and consider the following examples in triple quotes
"""28248,3,10.0.0.7,10.0.0.6,811,79478,831,189000000,831000000000.0,9,2796,29,2842,0,1,ICMP,3,271258991,135800571,1,1.0,2.0,0
3309,4,10.0.0.12,10.0.0.5,115494,123116604,252,778000000,253000000000.0,4,7916,13526,14418716,450,0,UDP,2,535189464,5228,10276,0.0,10276.0,0
6882,1,10.0.0.9,10.0.0.2,910,89180,931,583000000,932000000000.0,3,3443,29,2842,0,0,ICMP,1,6235,135462138,0,0.0,0.0,0
3279,7,10.0.0.12,10.0.0.5,102220,108966520,227,81000000,227000000000.0,3,7916,13491,14381406,449,0,UDP,1,4308,9000066,0,2399.0,2399.0,0
28428,1,10.0.0.2,10.0.0.7,889,87122,911,172000000,911000000000.0,5,2800,29,2842,0,1,ICMP,3,274043,271192589,1,1.0,2.0,0
2709,7,10.0.0.10,10.0.0.3,63952,66637984,227,361000000,227000000000.0,2,2385,6422,6691724,214,0,UDP,1,465607553,2418,3587,0.0,3587.0,1
11665,4,10.0.0.10,10.0.0.8,87529,91205218,290,314000000,290000000000.0,3,1943,7947,8280774,264,0,UDP,3,3590,3842,0,0.0,0.0,1
11515,3,10.0.0.10,10.0.0.8,43326,45145692,140,490000000,140000000000.0,5,1943,9109,9491578,303,0,UDP,3,3413,3665,0,0.0,0.0,1
32643,4,10.0.0.10,10.0.0.3,46688,48648896,137,394000000,137000000000.0,5,2364,10201,10629442,340,1,ICMP,2,48882177,48067459,2828,2828.0,5656.0,1
26897,3,10.0.0.7,10.0.0.2,45522,47433924,159,797000000,160000000000.0,6,948,9336,9728112,311,1,ICMP,4,19710255,67426645,2598,5186.0,7784.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_09_04_13_01_52
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736
mean,17210,3,49365,43129572,332,472963002,333025145387,5,3251,6234,5495646,207,0,2,89575803,89594012,940,940,1881
std,11904,1,50627,50240352,296,276419823,296839692518,2,2211,5727,6029590,190,0,1,148920594,130037168,2339,1951,2983
min,2488,1,0,0,0,0,0,2,4,0,0,0,0,1,2668,856,0,0,0
25%,6492,3,704,69776,123,246000000,123000000000,3,1931,29,2842,0,0,1,4266,3339,0,0,0
50%,11515,4,34597,14782222,257,428000000,257000000000,5,2385,8012,663228,267,1,2,105767,6030042,0,0,2
75%,29832,5,91478,85599258,435,728000000,436000000000,7,4357,10255,9853152,341,1,3,135559596,135758389,148,386,3421
max,42005,7,260006,147128002,1881,999000000,1880000000000,12,8803,18898,14953872,629,1,5,1269981973,990596183,20580,16577,20580
"""
and consider the following examples in triple quotes
"""5507,5,10.0.0.7,10.0.0.9,67505,77796258,159,123000000,159000000000.0,5,2400,12961,14796162,432,1,TCP,3,600437172,39186676,7829,302.0,8131.0,0
3339,5,10.0.0.12,10.0.0.5,129053,137570498,283,355000000,283000000000.0,4,7916,13532,14425112,451,0,UDP,1,4540,114029564,0,3838.0,3838.0,0
4907,5,10.0.0.10,10.0.0.9,100881,112064858,229,37000000,229000000000.0,11,2373,13496,14744432,449,1,TCP,1,7546751,7023194,0,0.0,0.0,0
30951,7,10.0.0.11,10.0.0.10,736,72128,753,256000000,753000000000.0,11,4942,30,2940,1,1,ICMP,1,406273133,270440140,3,3.0,6.0,0
6252,3,10.0.0.2,10.0.0.9,294,28812,301,582000000,302000000000.0,11,3421,29,2842,0,0,ICMP,1,271222881,271121380,1,1.0,2.0,0
6282,2,10.0.0.14,10.0.0.9,68869,71761498,231,362000000,231000000000.0,7,3421,8949,9324858,298,1,ICMP,2,5597,71969628,0,2521.0,2521.0,1
3459,1,10.0.0.2,10.0.0.5,135003,143913198,307,151000000,307000000000.0,2,7916,10322,11003252,344,0,UDP,1,4652,143927708,0,0.0,0.0,1
11335,1,10.0.0.1,10.0.0.8,4777,5092282,10,711000000,10711000000.0,3,1790,0,0,0,0,UDP,4,3833,125226685,0,3838.0,3838.0,1
24870,3,10.0.0.8,10.0.0.4,90604,94409368,318,379000000,318000000000.0,5,2997,8812,9182104,293,1,ICMP,2,5450,1562,0,0.0,0.0,1
33513,4,10.0.0.3,10.0.0.5,92592,96480864,287,889000000,288000000000.0,7,3024,9793,10204306,326,1,ICMP,1,5437,1382,0,0.0,0.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_09_04_13_06_22
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736
mean,17210,3,49365,43129572,332,472963002,333025145387,5,3251,6234,5495646,207,0,2,89575803,89594012,940,940,1881
std,11904,1,50627,50240352,296,276419823,296839692518,2,2211,5727,6029590,190,0,1,148920594,130037168,2339,1951,2983
min,2488,1,0,0,0,0,0,2,4,0,0,0,0,1,2668,856,0,0,0
25%,6492,3,704,69776,123,246000000,123000000000,3,1931,29,2842,0,0,1,4266,3339,0,0,0
50%,11515,4,34597,14782222,257,428000000,257000000000,5,2385,8012,663228,267,1,2,105767,6030042,0,0,2
75%,29832,5,91478,85599258,435,728000000,436000000000,7,4357,10255,9853152,341,1,3,135559596,135758389,148,386,3421
max,42005,7,260006,147128002,1881,999000000,1880000000000,12,8803,18898,14953872,629,1,5,1269981973,990596183,20580,16577,20580
"""
and consider the following examples in triple quotes
"""31161,3,10.0.0.3,10.0.0.10,893,87514,913,170000000,913000000000.0,9,4942,29,2842,0,1,ICMP,1,105515,135560782,0,0.0,0.0,0
33963,6,10.0.0.5,10.0.0.9,818,80164,838,396000000,838000000000.0,5,3034,29,2842,0,1,ICMP,3,135082507,271113893,0,0.0,0.0,0
28488,4,10.0.0.4,10.0.0.7,244,23912,250,918000000,251000000000.0,9,2800,29,2842,0,1,ICMP,1,542574465,540904736,3,3.0,6.0,0
40983,1,10.0.0.1,10.0.0.3,35809,40729602,83,256000000,83256000000.0,3,23,13312,14752768,443,1,TCP,3,40753153,1562577,3921,167.0,4088.0,0
11379,2,10.0.0.5,10.0.0.2,48866,3225312,154,351000000,154000000000.0,4,6696,9974,658284,332,1,TCP,3,98976710,178347683,4059,175.0,4234.0,0
41163,5,10.0.0.15,10.0.0.3,16605,896670,51,263000000,51263000000.0,7,8050,8748,472392,291,1,TCP,3,109055457,7477545,4298,437.0,4735.0,1
30913,4,10.0.0.9,10.0.0.4,59418,3208572,190,281000000,190000000000.0,7,3982,9264,500256,308,1,TCP,2,5143,1242,0,0.0,0.0,1
2668,6,10.0.0.10,10.0.0.3,24564,25595688,77,276000000,77276000000.0,3,2385,9322,9713524,310,0,UDP,1,3836,117948298,0,6209.0,6209.0,1
24930,3,10.0.0.4,10.0.0.8,109664,114269888,391,340000000,391000000000.0,5,2997,8772,9140424,292,1,ICMP,3,112945712,114671180,2432,2432.0,4864.0,1
10116,4,10.0.0.18,10.0.0.7,104299,108679558,333,436000000,333000000000.0,4,1931,9335,9727070,311,0,UDP,3,3413,3539,0,0.0,0.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

2023_09_04_16_58_27
consider the columns in triple backticks ```dt,switch,src,dst,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,Protocol,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps,label```
and its statistics in triple quotes
""",dt,switch,pktcount,bytecount,dur,dur_nsec,tot_dur,flows,packetins,pktperflow,byteperflow,pktrate,Pairflow,port_no,tx_bytes,rx_bytes,tx_kbps,rx_kbps,tot_kbps
count,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736,80736
mean,17210,3,49365,43129572,332,472963002,333025145387,5,3251,6234,5495646,207,0,2,89575803,89594012,940,940,1881
std,11904,1,50627,50240352,296,276419823,296839692518,2,2211,5727,6029590,190,0,1,148920594,130037168,2339,1951,2983
min,2488,1,0,0,0,0,0,2,4,0,0,0,0,1,2668,856,0,0,0
25%,6492,3,704,69776,123,246000000,123000000000,3,1931,29,2842,0,0,1,4266,3339,0,0,0
50%,11515,4,34597,14782222,257,428000000,257000000000,5,2385,8012,663228,267,1,2,105767,6030042,0,0,2
75%,29832,5,91478,85599258,435,728000000,436000000000,7,4357,10255,9853152,341,1,3,135559596,135758389,148,386,3421
max,42005,7,260006,147128002,1881,999000000,1880000000000,12,8803,18898,14953872,629,1,5,1269981973,990596183,20580,16577,20580
"""
and consider the following examples in triple quotes
"""12145,3,10.0.0.5,10.0.0.8,90345,96307770,200,706000000,201000000000.0,3,2242,13527,14419782,450,0,UDP,3,4103,3767,0,0.0,0.0,0
9966,1,10.0.0.1,10.0.0.7,59972,63930152,133,252000000,133000000000.0,2,1931,13532,14425112,451,0,UDP,2,3649,1172,0,0.0,0.0,0
24780,1,10.0.0.2,10.0.0.8,334,32732,343,200000000,343000000000.0,4,2997,29,2842,0,1,ICMP,1,5591,69355014,0,2369.0,2369.0,0
6282,4,10.0.0.9,10.0.0.3,274,26852,281,544000000,282000000000.0,12,3421,29,2842,0,0,ICMP,3,103855,99912,0,0.0,0.0,0
3429,2,10.0.0.2,10.0.0.5,124526,132744716,276,434000000,276000000000.0,2,7916,13311,14189526,443,0,UDP,3,555660922,5802,3838,0.0,3838.0,0
41434,6,10.0.0.3,10.0.0.15,95954,5565332,328,920000000,329000000000.0,5,8050,8330,483140,277,1,TCP,1,6387572,153054812,0,118.0,118.0,1
3729,3,10.0.0.11,10.0.0.5,129993,135452706,477,537000000,478000000000.0,2,7916,4461,4648362,148,0,UDP,1,5053,279386936,0,0.0,0.0,1
11635,4,10.0.0.10,10.0.0.8,79582,82924444,260,307000000,260000000000.0,4,1943,8407,8760094,280,0,UDP,3,4850,371009240,0,4811.0,4811.0,1
29082,4,10.0.0.7,10.0.0.1,8811,9108374,80,35000000,80035000000.0,9,1057,8763,9103670,292,1,ICMP,1,44677596,44661198,4916,4916.0,9832.0,1
11245,4,10.0.0.2,10.0.0.8,8960,9551360,18,814000000,18814000000.0,5,1298,0,0,0,0,UDP,3,3530,68070744,0,6517.0,6517.0,1
"""
Generate a 10000 rows of a data in csv format, label including 0 and 1 classes with equal distribution, consider the max token as 4000 - input tokens after calculation.

